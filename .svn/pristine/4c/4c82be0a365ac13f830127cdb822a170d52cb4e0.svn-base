package com.jeecms.extend.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

import com.jeecms.cms.action.admin.main.ChannelAct;
import com.jeecms.cms.entity.main.Channel;
import com.jeecms.core.entity.CmsDictionary;
import com.jeecms.core.entity.CmsSite;
import com.jeecms.core.manager.CmsDictionaryMng;
import com.jeecms.core.manager.CmsLogMng;
import com.jeecms.core.web.WebErrors;
import com.jeecms.core.web.util.CmsUtils;
import com.jeecms.extend.entity.CmsDepartment;
import com.jeecms.extend.entity.CmsDepartmentExt;
import com.jeecms.extend.manager.CmsDepartmentMng;

@Controller
public class CmsDepartmentAct {
	private static final Logger log = LoggerFactory.getLogger(ChannelAct.class);

	/**
	 * 跳转到部门主页面
	 * 
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("/cmsDepartment/department_main.do")
	public String departmentMain(ModelMap model) {
		return "cmsDepartment/department_main";
	}

	/**
	 * 跳转到左侧页面
	 * 
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("/cmsDepartment/v_left.do")
	public String left() {
		return "cmsDepartment/left";
	}

	/**
	 * 生成树
	 * 
	 * @param root
	 * @param request
	 * @param response
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping(value = "/cmsDepartment/v_tree.do")
	public String tree(String root, HttpServletRequest request,
			HttpServletResponse response, ModelMap model) {
		log.debug("tree path={}", root);
		boolean isRoot;
		// jquery treeview的根请求为root=source
		if (StringUtils.isBlank(root) || "source".equals(root)) {
			isRoot = true;
		} else {
			isRoot = false;
		}
		model.addAttribute("isRoot", isRoot);
		List<CmsDepartment> list;
		if (isRoot) {
			list = manager.getTopList();
		} else {
			Integer rootId = Integer.valueOf(root);
			list = manager.getChildList(rootId);
		}
		model.addAttribute("list", list);
		response.setHeader("Cache-Control", "no-cache");
		response.setContentType("text/json;charset=UTF-8");
		return "cmsDepartment/tree";
	}

	/**
	 * 跳转到列表页面
	 * 
	 * @param root
	 * @param request
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("/cmsDepartment/v_list.do")
	public String list(Integer root, HttpServletRequest request, ModelMap model) {
		List<CmsDepartment> list;
		if (root == null) {
			list = manager.getTopList();
		} else {
			list = manager.getChildList(root);
		}
		model.addAttribute("root", root);
		model.addAttribute("list", list);
		return "cmsDepartment/list";
	}

	/**
	 * 跳转到添加页面
	 * 
	 * @param root
	 * @param request
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("cmsDepartment/v_add.do")
	public String add(Integer root, HttpServletRequest request, ModelMap model) {
		CmsDepartment parent = null;
		if (root != null) {
			parent = manager.findById(root);
			model.addAttribute("parent", parent);
			model.addAttribute("root", root);
			
		}
		//部门分类
		List<CmsDictionary> dictionaryList = cmsDictionaryMng.getList("department_category");
		model.addAttribute("dictionaryList", dictionaryList);
		return "cmsDepartment/add";
	}

	/**
	 * 保存部门
	 * 
	 * @param root
	 * @param department
	 * @param departmentExt
	 * @param request
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("cmsDepartment/o_save.do")
	public String save(Integer root, CmsDepartment department,
			CmsDepartmentExt departmentExt, HttpServletRequest request,
			ModelMap model) {
		department = manager.save(department, departmentExt, root);

		model.addAttribute("root", root);
		return "redirect:v_list.do";
	}

	/**
	 * 跳转到编辑页面
	 * 
	 * @param id
	 * @param root
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("cmsDepartment/v_edit.do")
	public String edit(Integer id, Integer root, ModelMap model) {
		CmsDepartment department = manager.findById(id);

		List<CmsDepartment> topList = manager.getTopList();
		List<CmsDepartment> departmentList = CmsDepartment
				.getListForSelect(topList);
		model.addAttribute("departmentList", departmentList);
		model.addAttribute("department", department);
		model.addAttribute("root", root);
		//部门分类
		List<CmsDictionary> dictionaryList = cmsDictionaryMng.getList("department_category");
		model.addAttribute("dictionaryList", dictionaryList);
		return "cmsDepartment/edit";
	}

	/**
	 * 更新部门
	 * 
	 * @param root
	 * @param department
	 * @param ext
	 * @param parentId
	 * @param request
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("cmsDepartment/o_update.do")
	public String update(Integer root, CmsDepartment department,
			CmsDepartmentExt ext, Integer parentId, HttpServletRequest request,
			ModelMap model) {
		manager.update(department, ext, parentId);
		model.addAttribute("root", parentId);
		return "redirect:v_list.do";
	}

	/**
	 * 修改排列顺序
	 * 
	 * @param root
	 * @param wids
	 * @param priority
	 * @param request
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping("cmsDepartment/o_priority.do")
	public String priority(Integer root, Integer[] wids, Integer[] priority,
			HttpServletRequest request, ModelMap model) {
		System.out.println("priority");
		WebErrors errors = validatePriority(wids, priority, request);
		if (errors.hasErrors()) {
			return errors.showErrorPage(model);
		}
		manager.updatePriority(wids, priority);
		model.addAttribute("message", "global.success");
		return list(root, request, model);
	}

	/**
	 * 删除部门，会将其下属部门级联删除
	 * 
	 * @param root
	 * @param ids
	 * @param request
	 * @param model
	 * @return author:聂箫 date：2015年12月29日
	 */
	@RequestMapping(value = "/cmsDepartment/o_delete.do")
	public String delete(Integer root, Integer[] ids,
			HttpServletRequest request, ModelMap model) {
		try{
			CmsDepartment[] departments = manager.deleteByIds(ids);
		}catch(Exception e){
			model.addAttribute("error", "error");
		}
		return list(root, request, model);
	}

	private boolean vldExist(Integer id, Integer siteId, WebErrors errors) {
		if (errors.ifNull(id, "id")) {
			return true;
		}
		CmsDepartment entity = manager.findById(id);
		if (errors.ifNotExist(entity, Channel.class, id)) {
			return true;
		}
		return false;
	}

	private WebErrors validatePriority(Integer[] wids, Integer[] priority,
			HttpServletRequest request) {
		CmsSite site = CmsUtils.getSite(request);
		WebErrors errors = WebErrors.create(request);
		if (errors.ifEmpty(wids, "wids")) {
			return errors;
		}
		if (errors.ifEmpty(priority, "priority")) {
			return errors;
		}
		if (wids.length != priority.length) {
			errors.addErrorString("wids length not equals priority length");
			return errors;
		}
		for (int i = 0, len = wids.length; i < len; i++) {
			if (vldExist(wids[i], site.getId(), errors)) {
				return errors;
			}
			if (priority[i] == null) {
				priority[i] = 0;
			}
		}
		return errors;
	}

	@Autowired
	private CmsDepartmentMng manager;
	@Autowired
	private CmsLogMng cmsLogMng;
	@Autowired
	private CmsDictionaryMng cmsDictionaryMng;
}
